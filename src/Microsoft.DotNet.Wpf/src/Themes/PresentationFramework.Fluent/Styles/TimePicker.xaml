<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
    
    Based on Microsoft XAML for Win UI
    Copyright (c) Microsoft Corporation. All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Thickness x:Key="TimePickerBorderThemeThickness">1,1,1,0</Thickness>
    <Thickness x:Key="TimePickerAccentBorderThemeThickness">0,0,0,1</Thickness>
    <Thickness x:Key="TimePickerLeftIconMargin">10,8,0,0</Thickness>
    <Thickness x:Key="TimePickerRightIconMargin">0,8,10,0</Thickness>
    <Thickness x:Key="TimePickerClockButtonMargin">0,5,4,0</Thickness>
    <Thickness x:Key="TimePickerClockButtonPadding">0,0,0,0</Thickness>
    <sys:Double x:Key="TimePickerClockButtonHeight">24</sys:Double>
    <sys:Double x:Key="TimePickerClockButtonIconSize">14</sys:Double>
    <sys:String x:Key="ClockGlyph">&#xE787;</sys:String>

    <Style x:Key="DefaultTimePickerTextBoxStyle"
           TargetType="{x:Type TimePickerTextBox}">
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource DefaultControlFocusVisualStyle}"/>
        <Setter Property="BorderThickness"
                Value="0"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="AutomationProperties.Name"
                Value="{Binding Path=(AutomationProperties.Name), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TimePicker}}}"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="CaretBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels"
                Value="True"/>
        <Setter Property="OverridesDefaultStyle"
                Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TimePickerTextBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unwatermarked"/>
                                <VisualState Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Margin="{TemplateBinding Margin}">
                            <Decorator x:Name="PART_ContentHost"
                                       Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border Margin="{TemplateBinding Margin}">
                            <!-- This is a placeholder for TimePickerTextBox -->
                            <ContentControl
                                x:Name="PART_Watermark"
                                Opacity="0"
                                Margin="{TemplateBinding Padding}"
                                Focusable="False"
                                IsHitTestVisible="False"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTimePickerStyle"
           TargetType="{x:Type TimePicker}">
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource DefaultControlFocusVisualStyle}"/>
        <Setter Property="ContextMenu"
                Value="{DynamicResource DefaultControlContextMenu}"/>
        <Setter Property="ClockStyle"
                Value="{DynamicResource DefaultClockStyle}"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlElevationBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="{StaticResource TimePickerBorderThemeThickness}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource ControlContentThemeFontSize}"/>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Top"/>
        <Setter Property="MinHeight"
                Value="{DynamicResource TextControlThemeMinHeight}"/>
        <Setter Property="MinWidth"
                Value="{DynamicResource TextControlThemeMinWidth}"/>
        <Setter Property="Padding"
                Value="{DynamicResource TextControlThemePadding}"/>
        <Setter Property="Border.CornerRadius"
                Value="{DynamicResource ControlCornerRadius}"/>
        <Setter Property="SnapsToDevicePixels"
                Value="True"/>
        <Setter Property="OverridesDefaultStyle"
                Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TimePicker}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid
                            Grid.Row="0"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Border
                                x:Name="ContentBorder"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                                <Grid x:Name="PART_Root"
                                      FocusManager.FocusedElement="{Binding ElementName=PART_Button}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <TimePickerTextBox
                                            x:Name="PART_TextBox"
                                            Margin="0"
                                            Padding="{TemplateBinding Padding}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            ContextMenu="{TemplateBinding ContextMenu}"
                                            Focusable="{TemplateBinding Focusable}"
                                            Foreground="{TemplateBinding Foreground}"/>
                                    </Grid>
                                    <Button
                                        x:Name="PART_Button"
                                        Grid.Column="1"
                                        Width="{StaticResource TimePickerClockButtonHeight}"
                                        Height="{StaticResource TimePickerClockButtonHeight}"
                                        Margin="{StaticResource TimePickerClockButtonMargin}"
                                        Padding="{StaticResource TimePickerClockButtonPadding}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        AutomationProperties.Name="{Binding Path=(AutomationProperties.Name), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TimePicker}}}"
                                        Cursor="Arrow"
                                        Focusable="True"
                                        IsTabStop="True">
                                        <TextBlock
                                            Margin="{StaticResource TimePickerClockButtonPadding}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontFamily="{DynamicResource SegoeFluentIcons}"
                                            FontSize="{StaticResource TimePickerClockButtonIconSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{StaticResource ClockGlyph}"/>
                                    </Button>
                                </Grid>
                            </Border>
                            <Border
                                x:Name="AccentBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderThickness="{StaticResource TimePickerAccentBorderThemeThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ControlStrongStrokeColorDefault}"/>
                                </Border.BorderBrush>
                            </Border>
                        </Grid>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Row="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            AllowsTransparency="True"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=PART_TextBox}"
                            StaysOpen="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin"
                                Value="True">
                            <Setter TargetName="ContentBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ControlElevationBorderBrushSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource TextFillColorDisabled}"/>
                            <Setter TargetName="ContentBorder"
                                    Property="Background"
                                    Value="{DynamicResource ControlFillColorDisabled}"/>
                            <Setter TargetName="ContentBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ControlStrokeColorDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                Value="True">
                            <Setter TargetName="ContentBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ControlElevationBorderBrushPointerOver}"/>
                        </Trigger>
                        <Trigger Property="IsFocused"
                                Value="True">
                            <Setter TargetName="ContentBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ControlElevationBorderBrushSelected}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
                                Property="IsOpen"
                                Value="True">
                            <Setter TargetName="ContentBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ControlElevationBorderBrushSelected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultTimePickerStyle}" TargetType="{x:Type TimePicker}"/>
</ResourceDictionary>
